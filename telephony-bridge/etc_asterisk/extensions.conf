[globals]

[dialogflow]
exten => test,1,Answer()
 same =>   n(start),Playback(hello-world)
 same =>   n,Wait(0.5)
 same =>   n,Goto(start)
 same =>   n,Hangup

exten => _[a-z0-9].,1,NoOp(Dialogflow)
 same =>   n,Answer
 same =>   n,GoSub(check-channel-limit,s,start)
 same =>   n,SpeechCreate()
 same =>   n,Set(SPEECH_ENGINE(project_id)=${PROJECT_ID})
 same =>   n,Set(SPEECH_ENGINE(session_id)=${UNIQUEID})
 same =>   n,Set(SPEECH_ENGINE(language)=${CHANNEL(language)})
 same =>   n,Set(LANG_OVERRIDE=${PJSIP_HEADER(read,Language)})
 same =>   n,GotoIf($["${LANG_OVERRIDE}"==""]?clear_prompt)
 same =>   n,Set(SPEECH_ENGINE(language)=${LANG_OVERRIDE})
 same =>   n(clear_prompt),Set(PROMPT=) 
 same =>   n,SpeechActivateGrammar(event:welcome)
 same =>   n,Goto(dialogflow-loop,${EXTEN},start)

[dialogflow-loop]
exten => _[a-z0-9].,1(start),NoOp(Dialogflow Loop Start)
 same =>   n,Set(LAST_PROMPT=${PROMPT})
 same =>   n,SpeechBackground(${PROMPT}, 10)
 same =>   n,GoSub(dialogflow-process-results,${EXTEN},start)
 same =>   n,GotoIf($[${LEN(${TRANSFER})}>0]?dialogflow-transfer,${EXTEN},start)
 same =>   n,GotoIf($[${LEN(${TERMINATE})}>0]?dialogflow-terminate,${EXTEN},start)
 same =>   n,GotoIf($[${LEN(${PROMPT})}>0]?start)
 same =>   n,Set(PROMPT=${LAST_PROMPT})
 same =>   n,Goto(start)

[dialogflow-process-results]
exten => _[a-z0-9].,1(start),NoOp(Got ${SPEECH(results)} results)
 same =>   n,Set(PROMPT=)
 same =>   n,Set(i=0)
 same =>   n(process-results),Set(GRAMMAR=${SPEECH_GRAMMAR(${i})})
 same =>   n,Set(VALUE=${SPEECH_TEXT(${i})})
 same =>   n(checkfortransfer),GotoIf($["${GRAMMAR}"=~"transfer_call"]?gettransfer)
 same =>   n(checkfortransfer2),GotoIf($["${GRAMMAR}"=~"phoneNumber"]?gettransfer)
 same =>   n,Goto(checkforaudio)
 same =>   n(gettransfer),Set(TRANSFER=${VALUE})
 same =>   n(checkforaudio),GotoIf($["${GRAMMAR}"!="fulfillment_audio"]?checkforterminate)
 ; prompt is everything but .wav
 same =>   n,Set(PROMPT="${VALUE:0:-4}")
 same =>   n,Set(PROMPTFULLNAME="${VALUE}")
 same =>   n(checkforterminate),GotoIf($["${GRAMMAR}"!="end_conversation"]?increment)
 same =>   n,Set(TERMINATE=true)
 same =>   n(increment),Set(i=$[${i}+1])
 same =>   n,GotoIf($[${SPEECH(results)}>${i}]?process-results)
 same =>   n,Return()

[dialogflow-transfer]
exten => _[a-z0-9].,1(start),NoOp(Transferring to ${EXTEN})
 same =>   n,GotoIf($[${LEN("${PROMPT}")}=0]?dotransfer)
 same =>   n,Playback(${PROMPT})
 same =>   n(dotransfer),Transfer(${TRANSFER})
 same =>   n,GotoIf($["${TRANSFERSTATUS}"="${FAILURE}"]?transferfailed)
 same =>   n,GotoIf($["${TRANSFERSTATUS}"="${UNSUPPORTED}"]?transferunsupported)
 same =>   n,Hangup ; success!
 same =>   n(transferfailed),Playback(all-circuits-busy-now)
 same =>   n,Hangup
 same =>   n(transferunsupported),Playback(ss-noservice)
 same =>   n,Hangup

[dialogflow-terminate]
exten => _[a-z0-9].,1(start),NoOp(Transferring to ${EXTEN})
 same =>   n,GotoIf($[${LEN("${PROMPT}")}=0]?doterminate)
 same =>   n,Playback(${PROMPT})
 same =>   n(doterminate),Hangup ; success!

[check-channel-limit]
exten => s,1(start),NoOp(Checking channel count)
 ; unlimited until 202007
 same =>   n,Set(YYYYMM=${STRFTIME(${EPOCH},,%Y%m)})
 same =>   n,GotoIf($["${YYYYMM}"<="202006"]?continue)
 same =>   n,Set(GROUP()=dialogflow)
 ; lock to prevent race condition where calls 2 & 3 both think they need to drop
 same =>   n,NoOp(${LOCK(limit-lock)})
 same =>   n,NoOp(Group count is ${GROUP_COUNT(dialogflow)})
 same =>   n,GotoIf($[${GROUP_COUNT(dialogflow)}<3]?continue) ; else overlimit
 same =>   n,Set(GROUP()=overlimit)
 same =>   n,Set(OVERLIMIT=1)
 same =>   n(continue),NoOp(${UNLOCK(limit-lock)})
 same =>   n,GotoIf($["${OVERLIMIT}"="1"]?indicate-overlimit)
 same =>   n,Return
 same =>   n(indicate-overlimit),Playback(over-developer-limit)
 same =>   n,Wait(5)
 same =>   n,Goto(indicate-overlimit)

